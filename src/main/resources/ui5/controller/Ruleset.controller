showFooter : function() {
	return true;
},
init : function() {
	var oModel = new JSONModel();
	var that = this;
	var sServicename = jQuery.sap.getUriParameters().get("servicename");
	var sMicroservicename = jQuery.sap.getUriParameters().get("microservice");
	var sSchemaname = jQuery.sap.getUriParameters().get("schema");
	oModel.loadData("../rest/rules/" + encodeURI(sServicename) + "/" + encodeURI(sMicroservicename) + "/" + encodeURI(sSchemaname));
	this.getView().setModel(oModel);

	var oStateModel = this.getView().getModel("state");
	oStateModel.setProperty("/title", "Define Schema rules");
	oStateModel.setProperty("/breadcrumbs", [ 
		{"text" : "Homepage", "link" : "./Home"}, 
		{"text" : "Services", "link" : "./Services"}, 
		{"text" : "Service", "link" : "./Service?servicename=" + encodeURI(sServicename) },
		{"text" : "MicroService", "link" : "./Microservice?servicename=" + encodeURI(sServicename) + "&microservice=" + encodeURI(sMicroservicename) }
	] );
},
edit : function(oEvent) {
},
save : function(oEvent) {
	var oModel = this.getView().getModel();
	var sServicename = jQuery.sap.getUriParameters().get("servicename");
	var sMicroservicename = jQuery.sap.getUriParameters().get("miroservicename");
	if (!!sSchemaname) {
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("POST", "../rest/fileschemas/" + encodeURI(sConnectionname) + "/" + encodeURI(sSchemaname));
		xmlhttp.setRequestHeader("Content-Type", "application/json");
		xmlhttp.onreadystatechange = function() {
		    if (xmlhttp.readyState == 4) {
		    	if (xmlhttp.status == 200) {
		        	alert(xmlhttp.responseText);
		    	} else {
		    		alert(xmlhttp.responseText);
		    	}
		    }
		}
		xmlhttp.send(oModel.getJSON());
	} else {
		alert("No name of the schema entered");
	}
},
cancel : function(oEvent) {
},
onAddSchema : function(oEvent) {
},
onConfigureRules : function(oEvent) {
	var path = oEvent.getSource().getBindingContext().getPath();
	var oModel = this.getView().getModel();
	var obj = oModel.getProperty(path);
	var sServicename = jQuery.sap.getUriParameters().get("servicename");
	var sMicroservicename = jQuery.sap.getUriParameters().get("miroservicename");
	window.location.href = './Ruleset?servicename=' + encodeURI(sServicename) + '&microservice=' + encodeURI(sMicroservicename) + '&schema=' + encodeURI(obj.name);
},
ruletypeformatter : function(name) {
	if (name === "EmptyRule") {
		return "";
	} else if (name === "ArrayRule") {
		return "";
	} else if (name === "RecordRule") {
		return "";
	} else {
		return name;
	}
},
rulenamevisibleformatter : function(name) {
	if (name === "EmptyRule") {
		return false;
	} else if (name === "ArrayRule") {
		return false;
	} else if (name === "RecordRule") {
		return false;
	} else {
		return true;
	}
},
conditionvisibleformatter : function(name) {
	if (name === "PrimitiveRule") {
		return true;
	} else {
		return false;
	}
},
onDragStart: function(oEvent) {
	var oDraggedControl = oEvent.getParameter("target");
	if (oDraggedControl.getId() === "dsd") {
        oEvent.preventDefault();
    }
},
onDragEnter: function(oEvent) {
	var oDraggedControl = oEvent.getParameter("target");
	if (oDraggedControl.getId() === "dsd") {
        oEvent.preventDefault();
    }
},
onDrop: function(oEvent) {
	var sDropPosition = oEvent.getParameter("dropPosition");
	var oDraggedControl = oEvent.getParameter("draggedControl");
	var oDroppedControl = oEvent.getParameter("droppedControl");
	sap.m.MessageToast.show(
		oDraggedControl.getId() + 
		" is dropped " + 
		sDropPosition + 
		" the " + 
		oDroppedControl.getId()
	);
}

